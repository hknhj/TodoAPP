name: Build and Push Docker Image

on:
  push: # 모든 브랜치에서 push 이벤트 발생 시 실행
  workflow_dispatch: # 수동 실행도 가능

jobs:
  # build and push-docker
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    # 1️⃣ 소스 코드 체크아웃
    - name: Checkout source code
      uses: actions/checkout@v3

    # 2️⃣ Node.js 설치 및 의존성 설치
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    # 4️⃣ 의존성 설치 
    - name: Install dependencies
      run: npm install

    # 5️⃣ Docker 로그인을 위한 Docker Hub 인증
    - name: Docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 6️⃣ Docker 이미지 빌드
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/todoapp:latest .

    # 7️⃣ Docker Hub로 푸시
    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/todoapp:latest
    
  run-docker-image-on-ec2:
    needs: build-and-push
    runs-on: self-hosted

    steps:
    # 1. Docker pull
    - name: docker pull
      run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/todoapp:latest

     # 2. Docker container stop
    - name: stop container
      run: |
        if [ $(sudo docker ps -a -q -f name=todoapp) ]; then
          docker stop todoapp
        else
          echo "Container todoapp-container not found or already stopped"
        fi

    # 3. Docker run new container
    - name: run new container
      run: docker run -d --rm --name todoapp --env-file /home/ubuntu/TodoAPP/.env -p 3000:3000 hknhj/todoapp:latest
    
